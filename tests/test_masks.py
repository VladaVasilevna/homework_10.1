import pytest
from src.masks import get_mask_card_number


def test_masking_correct_number():
    """Тестирование правильности маскирования номера карты."""
    assert get_mask_card_number("1234567812345678") == "1234 56** **** 5678"


def test_masking_edge_cases():
    """Тестирование работы функции на различных входных форматах номеров карт."""
    # Граничные случаи
    assert get_mask_card_number("123456781234567") == "Номер карты должен содержать 16 цифр."
    assert get_mask_card_number("12345678123456789") == "Номер карты должен содержать 16 цифр."

    # Нестандартные длины номеров
    assert get_mask_card_number("1234abcd12345678") == "Номер карты должен содержать 16 цифр."
    assert get_mask_card_number("123456781234567a") == "Номер карты должен содержать 16 цифр."

    # Номера карт с пробелами
    assert get_mask_card_number("1234 5678 1234 5678") == "Номер карты должен содержать 16 цифр."


def test_empty_input():
    """Тестирование, что функция корректно обрабатывает входные строки, где отсутствует номер карты."""
    assert get_mask_card_number("") == "Номер карты должен содержать 16 цифр."


def test_non_numeric_input():
    """Тестирование, что функция корректно обрабатывает нечисловые входные строки."""
    assert get_mask_card_number("abcdefghabcdefgh") == "Номер карты должен содержать 16 цифр."
